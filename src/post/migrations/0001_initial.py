# Generated by Django 3.2.8 on 2024-01-29 04:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import post.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('page', '0001_initial'),
        ('directory', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('updated_at', models.DateField(auto_now=True)),
                ('body', models.TextField()),
                ('perspective', models.CharField(blank=True, max_length=300, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('has_perspective', models.BooleanField(default=False)),
                ('share_count', models.IntegerField(blank=True, default=0, null=True)),
                ('votes', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent_answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.answer')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('perspective', models.CharField(blank=True, max_length=300, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('has_perspective', models.BooleanField(default=False)),
                ('share_count', models.IntegerField(blank=True, default=0, null=True)),
                ('votes', models.IntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comment_author', to=settings.AUTH_USER_MODEL)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.comment')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.ImageField(blank=True, max_length=100000, null=True, upload_to=post.models.post_to)),
                ('video', models.FileField(blank=True, max_length=1000000, null=True, upload_to=post.models.post_to)),
                ('file', models.FileField(blank=True, max_length=1000000, null=True, upload_to=post.models.post_to)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('link', models.URLField(blank=True, max_length=2000, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('post_type', models.CharField(blank=True, max_length=300, null=True)),
                ('post_status', models.CharField(default='normal', max_length=300)),
                ('category', models.CharField(blank=True, max_length=300, null=True)),
                ('perspective', models.CharField(blank=True, max_length=300, null=True)),
                ('answer_one', models.CharField(blank=True, max_length=300, null=True)),
                ('answer_two', models.CharField(blank=True, max_length=300, null=True)),
                ('answer_three', models.CharField(blank=True, max_length=300, null=True)),
                ('answer_four', models.CharField(blank=True, max_length=300, null=True)),
                ('is_answer', models.CharField(blank=True, max_length=300, null=True)),
                ('active_for', models.CharField(blank=True, max_length=300, null=True)),
                ('prize', models.CharField(blank=True, max_length=300, null=True)),
                ('share_count', models.IntegerField(blank=True, default=0, null=True)),
                ('saved_count', models.IntegerField(blank=True, default=0, null=True)),
                ('report_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_repost', models.BooleanField(default=False)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('is_walk_through', models.BooleanField(default=False)),
                ('has_perspective', models.BooleanField(default=False)),
                ('votes', models.IntegerField(default=0)),
                ('reposts', models.IntegerField(default=0)),
                ('comments', models.IntegerField(default=0)),
                ('answers', models.IntegerField(default=0)),
                ('slug', models.SlugField(blank=True, max_length=1000)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_author', to=settings.AUTH_USER_MODEL)),
                ('directory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='directory', to='directory.directory')),
                ('page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='page', to='page.page')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alt', to='post.post')),
                ('report', models.ManyToManyField(blank=True, default=None, related_name='post_report', to=settings.AUTH_USER_MODEL)),
                ('saved', models.ManyToManyField(blank=True, default=None, related_name='post_saved', to=settings.AUTH_USER_MODEL)),
                ('voters', models.ManyToManyField(related_name='post_voters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('is_post', models.BooleanField()),
                ('is_comment', models.BooleanField()),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.answer')),
                ('comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.comment')),
                ('post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.post')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_voter', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='post.post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='report',
            field=models.ManyToManyField(blank=True, default=None, related_name='post_comment_report', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='saved',
            field=models.ManyToManyField(blank=True, default=None, related_name='post_comment_saved', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='voters',
            field=models.ManyToManyField(related_name='post_comment_voters', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='question', to='post.post'),
        ),
        migrations.AddField(
            model_name='answer',
            name='report',
            field=models.ManyToManyField(blank=True, default=None, related_name='post_answer_report', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='saved',
            field=models.ManyToManyField(blank=True, default=None, related_name='post_answer_saved', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='answer',
            name='voters',
            field=models.ManyToManyField(related_name='post_answer_voters', to=settings.AUTH_USER_MODEL),
        ),
    ]
