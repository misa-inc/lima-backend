# Generated by Django 3.2.8 on 2024-01-29 04:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import page.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0004_alter_taggeditem_content_type_alter_taggeditem_tag'),
        ('project', '0001_initial'),
        ('library', '0001_initial'),
        ('directory', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, max_length=1000000, null=True, upload_to=page.models.page_to)),
                ('cover', models.ImageField(blank=True, max_length=1000000, null=True, upload_to=page.models.page_for)),
                ('name', models.CharField(max_length=250, unique=True)),
                ('about', models.TextField(blank=True, max_length=100000, null=True)),
                ('description', models.TextField(blank=True, max_length=100000, null=True)),
                ('address', models.TextField(blank=True, max_length=100000, null=True)),
                ('location', models.TextField(blank=True, max_length=100000, null=True)),
                ('category', models.CharField(blank=True, max_length=1000, null=True)),
                ('mobile', models.CharField(blank=True, max_length=1000, null=True)),
                ('email', models.CharField(blank=True, max_length=1000, null=True)),
                ('price', models.CharField(blank=True, max_length=1000, null=True)),
                ('page_type', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('day', models.CharField(blank=True, max_length=1000, null=True)),
                ('month', models.CharField(blank=True, max_length=1000, null=True)),
                ('year', models.CharField(blank=True, max_length=1000, null=True)),
                ('hours', models.CharField(blank=True, max_length=1000, null=True)),
                ('subscriber_count', models.IntegerField(blank=True, default=0, null=True)),
                ('likes_count', models.IntegerField(blank=True, default=0, null=True)),
                ('share_count', models.IntegerField(blank=True, default=0, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, max_length=1000, unique=True)),
                ('books', models.ManyToManyField(blank=True, default=None, related_name='pages_books', to='library.Book')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_creator', to=settings.AUTH_USER_MODEL)),
                ('directories', models.ManyToManyField(blank=True, default=None, related_name='pages_directories', to='directory.Directory')),
                ('likes', models.ManyToManyField(blank=True, default=None, related_name='pages_likes', to=settings.AUTH_USER_MODEL)),
                ('moderators', models.ManyToManyField(blank=True, default=None, related_name='pages_moderators', to=settings.AUTH_USER_MODEL)),
                ('projects', models.ManyToManyField(blank=True, default=None, related_name='pages_projects', to='project.Project')),
                ('subscribers', models.ManyToManyField(blank=True, default=None, related_name='pages_subscribers', to=settings.AUTH_USER_MODEL)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Text',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Social',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('url', models.URLField(blank=True, max_length=2000)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('page', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='page.page')),
            ],
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('text', models.TextField(blank=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('page', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='page.page')),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, max_length=100000, null=True, upload_to=page.models.link_to)),
                ('title', models.CharField(max_length=300)),
                ('url', models.URLField(blank=True, max_length=2000)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('page', models.ForeignKey(blank=True, default=None, on_delete=django.db.models.deletion.CASCADE, to='page.page')),
            ],
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, max_length=20, null=True, verbose_name='Company')),
                ('duration', models.CharField(blank=True, max_length=300, null=True)),
                ('title', models.CharField(blank=True, max_length=300, null=True)),
                ('description', models.TextField(verbose_name='Description')),
                ('is_deleted', models.BooleanField(default=False)),
                ('create', models.DateTimeField(auto_now_add=True, verbose_name='Create time')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update time')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages_experiences', to='page.page', verbose_name='Page')),
            ],
            options={
                'verbose_name': 'Experience',
                'verbose_name_plural': 'Experiences',
                'ordering': ['-create', '-id'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(blank=True, max_length=20, null=True, verbose_name='Company')),
                ('duration', models.CharField(blank=True, max_length=300, null=True)),
                ('school', models.CharField(blank=True, max_length=300, null=True)),
                ('address', models.CharField(blank=True, max_length=10000, null=True)),
                ('location', models.CharField(blank=True, max_length=10000, null=True)),
                ('start_at', models.CharField(blank=True, max_length=300, null=True)),
                ('end_at', models.CharField(blank=True, max_length=300, null=True)),
                ('school_url', models.URLField(blank=True, max_length=10000, null=True)),
                ('description', models.TextField(verbose_name='Description')),
                ('is_deleted', models.BooleanField(default=False)),
                ('create', models.DateTimeField(auto_now_add=True, verbose_name='Create time')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Update time')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages_educations', to='page.page', verbose_name='Page')),
            ],
            options={
                'verbose_name': 'Education',
                'verbose_name_plural': 'Educations',
                'ordering': ['-create', '-id'],
            },
        ),
    ]
